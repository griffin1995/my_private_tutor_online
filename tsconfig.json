{
  "compilerOptions": {
    // Context7 MCP Documentation Source: /microsoft/typescript
    // Reference: TypeScript 5.8+ strict mode configuration for production readiness
    // Purpose: Enable comprehensive type safety for premium tutoring service
    
    // Target and Module Configuration
    "target": "ES2022", // Updated from ES2017 for better performance and modern features
    "lib": [
      "dom",
      "dom.iterable", 
      "ES2022" // Updated to match target for consistency
    ],
    "module": "esnext",
    "moduleResolution": "bundler", // Updated for Next.js App Router compatibility
    
    // CONTEXT7 SOURCE: /microsoft/typescript - Enhanced strict type checking for performance
    // PERFORMANCE OPTIMIZATION REASON: Official TypeScript strict mode with optimized variance checks
    "strict": true, // ENABLED: Comprehensive type safety for royal clients
    "noImplicitAny": true, // Explicit - included in strict but listed for clarity
    "strictNullChecks": true, // Explicit - included in strict but listed for clarity
    "strictFunctionTypes": true, // CONTEXT7 SOURCE: /microsoft/typescript - enables faster variance checks
    "noImplicitReturns": true, // Ensure all code paths return a value
    "noImplicitThis": true, // Prevent implicit 'this' type issues
    "noUncheckedIndexedAccess": true, // Prevent undefined array/object access
    
    // CONTEXT7 SOURCE: /microsoft/typescript - React 19 compatibility enhancements
    // REACT 19 OPTIMIZATION REASON: Latest TypeScript compiler options for React 19 concurrent features
    "exactOptionalPropertyTypes": true, // Strict optional property type checking
    "noPropertyAccessFromIndexSignature": true, // Prevent dynamic property access errors
    
    // CONTEXT7 SOURCE: /microsoft/typescript - Enhanced performance and safety configuration
    // BUILD OPTIMIZATION REASON: Official TypeScript compiler optimizations for faster builds
    "allowJs": true,
    "skipLibCheck": true, // CONTEXT7 SOURCE: /microsoft/typescript - Skip all library checks for maximum build speed
    "skipDefaultLibCheck": true, // CONTEXT7 SOURCE: /microsoft/typescript - Skip default library checks
    "noEmit": true,
    "incremental": true, // CONTEXT7 SOURCE: /microsoft/typescript - Enable incremental compilation for faster rebuilds
    "tsBuildInfoFile": ".next/cache/tsconfig.tsbuildinfo", // CONTEXT7 SOURCE: /microsoft/typescript - Optimize incremental build info location
    "composite": false, // CONTEXT7 SOURCE: /microsoft/typescript - Phase 3: Disable composite to remove project reference overhead
    "preserveWatchOutput": true, // CONTEXT7 SOURCE: /microsoft/typescript - Preserve watch output for better development experience
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    "resolveJsonModule": true,
    "isolatedModules": true,
    "verbatimModuleSyntax": false, // Disabled for Next.js compatibility
    
    // JSX Configuration
    "jsx": "preserve",
    "jsxImportSource": "react",
    
    // CONTEXT7 SOURCE: /microsoft/typescript - Enhanced path resolution for faster module resolution
    // MODULE RESOLUTION REASON: Optimized path mapping for faster TypeScript compilation
    "baseUrl": ".",
    "paths": {
      "@/*": [
        "./src/*"
      ]
    },
    
    // CONTEXT7 SOURCE: /microsoft/typescript - Disable automatic @types inclusion for better performance
    // PERFORMANCE OPTIMIZATION REASON: Only include explicitly needed @types packages
    "types": [], // Disable automatic inclusion of all @types packages
    
    // CONTEXT7 SOURCE: /microsoft/typescript - Advanced performance optimizations for large projects
    // PERFORMANCE ENHANCEMENT REASON: Reduce memory usage and improve compilation speed
    "disableSourceOfProjectReferenceRedirect": true, // Optimize project reference handling
    "importsNotUsedAsValues": "remove", // Remove unused imports for better tree-shaking
    "preserveValueImports": false, // Allow removal of value imports used only as types
    "forceConsistentCasingInFileNames": true, // Prevent casing issues on case-insensitive filesystems
    
    // Next.js Plugin
    "plugins": [
      {
        "name": "next"
      }
    ]
  },
  "include": [
    "**/*.ts",
    "**/*.tsx", 
    "next-env.d.ts",
    ".next/types/**/*.ts"
  ],
  "exclude": [
    "node_modules",
    "out/**/*", // Exclude old static export artifacts
    ".next/cache/**/*",
    "**/*.test.ts",
    "**/*.test.tsx",
    "tests/**/*",
    "src/__tests__/**/*",
    "scripts/**/*", // CONTEXT7 SOURCE: /microsoft/typescript - Exclude performance measurement scripts
    "*.config.js", // Exclude configuration files from compilation
    "*.config.ts" // Exclude TypeScript config files
  ]
}
