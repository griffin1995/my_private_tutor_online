# CONTEXT7 SOURCE: /context7/nextjs - Next.js CI/CD testing workflow patterns
# CONTEXT7 SOURCE: /jestjs/jest - Jest testing in continuous integration environments
name: Test Suite

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          npm ci
          
      - name: Type checking
        run: npm run typecheck
        
      - name: Linting
        run: npm run lint
        
      - name: Unit and Integration Tests
        run: npm run test:coverage
        
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage
          fail_ci_if_error: true
          
      - name: Test build process
        run: npm run build
        
      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.node-version }}
          path: |
            coverage/
            test-results.json
            
  accessibility-tests:
    name: Accessibility Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run accessibility tests
        run: npm run test:accessibility
        
  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build application
        run: npm run build
        
      - name: Start application
        run: |
          npm start &
          sleep 10
          
      - name: Run performance tests
        run: npm run test:performance
        
  quality-gate:
    name: Quality Gate
    runs-on: ubuntu-latest
    needs: [test, accessibility-tests, performance-tests]
    if: always()
    
    steps:
      - name: Check test results
        run: |
          echo "All test suites completed"
          if [ "${{ needs.test.result }}" != "success" ]; then
            echo "Unit/Integration tests failed"
            exit 1
          fi
          if [ "${{ needs.accessibility-tests.result }}" != "success" ]; then
            echo "Accessibility tests failed"
            exit 1
          fi
          if [ "${{ needs.performance-tests.result }}" != "success" ]; then
            echo "Performance tests failed"
            exit 1
          fi
          echo "All quality gates passed - ready for royal client deployment"