{
  "name": "my-tutor-website",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev --turbopack",
    "dev:trace": "NEXT_TURBOPACK_TRACING=1 next dev --turbopack",
    "dev:fast": "next dev --turbopack --experimental-debug-memory-usage",
    "dev:profile": "NODE_OPTIONS=--inspect next dev --turbopack",
    "clean": "rm -rf .next cache node_modules/.cache",
    "clean:full": "rm -rf .next cache node_modules/.cache .tsbuildinfo coverage playwright-report test-results",
    "build": "next build",
    "build:fast": "NODE_ENV=production next build",
    "build:trace": "NEXT_TURBOPACK_TRACING=1 next build --turbopack",
    "build:analyze": "ANALYZE=true next build",
    "build:profile": "NODE_OPTIONS=--heap-prof next build",
    "build:clean": "npm run clean:full && next build",
    "clean-cache": "rm -rf .next/cache cache",
    "start": "next start",
    "lint": "next lint",
    "validate:cms-architecture": "node scripts/validate-cms-architecture.js",
    "lint:fix": "next lint --fix",
    "format": "prettier --write \"src/**/*.{ts,tsx,js,jsx,json,css,md}\"",
    "format:check": "prettier --check \"src/**/*.{ts,tsx,js,jsx,json,css,md}\"",
    "typecheck": "tsc --noEmit",
    "typecheck:trace": "tsc --noEmit --extendedDiagnostics",
    "typecheck:watch": "tsc --noEmit --watch",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:parallel": "jest --maxWorkers=100%",
    "test:ci": "jest --config jest.config.ci.js --ci --maxWorkers=100%",
    "test:ci:parallel": "jest --config jest.config.ci.js --ci --maxWorkers=100% --workerThreads",
    "test:shard": "jest --shard",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:parallel": "playwright test --workers=4",
    "optimize:images": "node scripts/optimize-images.mjs",
    "optimize:duplicates": "node scripts/cleanup-duplicates.mjs",
    "optimize:remove-duplicates": "node scripts/remove-duplicates.mjs",
    "optimize:all": "npm run optimize:images && npm run optimize:remove-duplicates",
    "optimize:phase2": "node scripts/phase2-image-optimizer.mjs",
    "darken:images": "node scripts/darken-images.mjs",
    "test:accessibility": "playwright test tests/e2e/accessibility.spec.ts",
    "test:performance": "playwright test tests/integration/performance.test.ts",
    "test:all": "npm run test && npm run test:e2e",
    "analyze": "ANALYZE=true npm run build",
    "prepare": "husky install",
    "tina:dev": "tinacms dev",
    "tina:build": "tinacms build",
    "pre-commit": "lint-staged",
    "quality": "npm run typecheck && npm run lint && npm run format:check && npm run test",
    "quality:fix": "npm run typecheck && npm run lint:fix && npm run format",
    "quality:fast": "npm run typecheck:trace && npm run lint:fix && npm run format",
    "dev:debug": "npm run clean-cache && npm run dev:profile",
    "dev:full-clean": "npm run clean:full && npm install && npm run dev",
    "dev:fresh": "npm run clean:full && npm run dev:fast",
    "dev:analyze-trace": "node scripts/dev-utils.mjs trace",
    "dev:analyze-typescript": "node scripts/dev-utils.mjs typescript",
    "dev:analyze-bundle": "node scripts/dev-utils.mjs bundle",
    "dev:profile-build": "node scripts/dev-utils.mjs profile",
    "dev:health": "node scripts/dev-utils.mjs health",
    "infrastructure:init": "node scripts/infrastructure-init.js",
    "infrastructure:backup": "node -e \"require('./src/lib/infrastructure/database-backup').defaultBackupManager.createFullBackup().then(m => console.log('Backup completed:', m)).catch(console.error)\"",
    "infrastructure:health": "curl -s http://localhost:3000/api/infrastructure/health | jq '.'",
    "infrastructure:test": "npm run infrastructure:backup && npm run infrastructure:health",
    "emergency:backup": "node -e \"require('./src/lib/infrastructure/database-backup').defaultBackupManager.createFullBackup().then(() => console.log('✅ Emergency backup completed')).catch(err => { console.error('❌ Emergency backup failed:', err); process.exit(1); })\"",
    "emergency:health": "curl -s http://localhost:3000/api/infrastructure/health || echo '❌ Health check failed'",
    "monitoring:start": "node -e \"require('./src/lib/infrastructure/monitoring').createInfrastructureMonitor().startContinuousMonitoring(5); console.log('Monitoring started'); setInterval(() => {}, 1000)\"",
    "logs:errors": "tail -f logs/errors/errors-$(date +%Y-%m-%d).jsonl || echo 'No error logs found'",
    "logs:monitoring": "tail -f logs/monitoring/monitoring-$(date +%Y-%m-%d).log || echo 'No monitoring logs found'",
    "performance:audit": "lhci autorun",
    "performance:budget": "lhci assert --budgetsFile=./performance-budget.json",
    "performance:monitor": "lhci collect --config=.lighthouserc.js",
    "ci:performance": "npm run build && npm run performance:audit && npm run performance:budget",
    "monitoring:enterprise": "node -e \"require('./src/lib/monitoring/enterprise-monitoring').getEnterpriseMonitoring().getSystemStatus().then(console.log).catch(console.error)\"",
    "monitoring:dashboard": "node -e \"require('./src/lib/monitoring/real-time-dashboard').getRealTimeMonitoringDashboard().getCurrentMetrics().then(console.log).catch(console.error)\"",
    "monitoring:alerts": "node -e \"require('./src/lib/monitoring/performance-alerts').getPerformanceAlertingSystem().getAlertStatistics().then ? console.log : console.log\"",
    "monitoring:test-alert": "node -e \"require('./src/lib/monitoring/enterprise-monitoring').getEnterpriseMonitoring().triggerAlert('test_alert', 'warning', { test: true, timestamp: new Date() })\"",
    "monitoring:health-check": "curl -s http://localhost:3000/api/infrastructure/health | jq '.' || echo 'Health check endpoint not available'",
    "monitoring:comprehensive": "npm run monitoring:enterprise && npm run monitoring:dashboard && npm run monitoring:alerts",
    "phase1:validate": "node scripts/phase1-validation.js",
    "phase1:validate:full": "node scripts/phase1-validation.js --full",
    "phase1:report": "cat phase1-validation-report.json",
    "dev:pesticide": "NEXT_PUBLIC_ENABLE_PESTICIDE=true npm run dev",
    "dev:pesticide-off": "NEXT_PUBLIC_ENABLE_PESTICIDE=false npm run dev",
    "dev:debug-layout": "NEXT_PUBLIC_ENABLE_PESTICIDE=true npm run dev",
    "deploy:dev": "node scripts/deploy-environment.mjs development",
    "deploy:staging": "node scripts/deploy-environment.mjs staging",
    "deploy:production": "node scripts/deploy-environment.mjs production",
    "deploy:analyze": "node scripts/deploy-environment.mjs staging --analyze",
    "error-prevention": "node scripts/error-prevention-cli.js",
    "error-prevention:start": "node scripts/error-prevention-cli.js start",
    "error-prevention:stop": "node scripts/error-prevention-cli.js stop",
    "error-prevention:status": "node scripts/error-prevention-cli.js status",
    "error-prevention:check": "node scripts/error-prevention-cli.js check",
    "error-prevention:benchmark": "node scripts/error-prevention-cli.js benchmark",
    "error-prevention:health": "node scripts/error-prevention-cli.js health",
    "error-prevention:install": "node scripts/error-prevention-cli.js install",
    "error-prevention:validate": "node scripts/error-prevention-cli.js validate",
    "perf:monitor": "node scripts/performance-monitor.js monitor",
    "perf:benchmark": "node scripts/performance-monitor.js benchmark",
    "perf:report": "node scripts/performance-monitor.js report",
    "perf:status": "node scripts/performance-status.mjs",
    "perf:dashboard": "node scripts/performance-monitor.js dashboard",
    "perf:protect": "node scripts/performance-monitor.js protect",
    "perf:quick": "node scripts/performance-status.mjs",
    "build:monitor": "npm run build && npm run perf:report",
    "build:benchmark": "npm run build && npm run perf:benchmark",
    "tokens:build": "style-dictionary build --config src/design-tokens/config.json",
    "tokens:watch": "style-dictionary build --config src/design-tokens/config.json --watch",
    "tokens:clean": "rm -rf src/styles/tokens/ src/design-tokens/generated/ tailwind.config.tokens.js",
    "audit:css": "wallace .next/static/css/*.css --json > reports/audits/css-analysis.json",
    "audit:colors": "css-color-extractor .next/static/css/*.css reports/audits/colors.json --format=json",
    "audit:palette": "css-color-extractor .next/static/css/*.css reports/audits/palette.html --format=html",
    "audit:accessibility": "pa11y-ci --config .pa11yci.json --json > reports/audits/accessibility.json",
    "audit:visual": "playwright test tests/visual-regression.spec.ts",
    "audit:design": "playwright test tests/design-system.spec.ts",
    "audit:validate": "constyble .next/static/css/*.css --config .constyblerc",
    "audit:full": "npm run build && npm run audit:css && npm run audit:colors && npm run audit:validate",
    "audit:report": "node scripts/generate-audit-report.js",
    "prebuild": "npm run tokens:build",
    "test:design": "npm run audit:full && npm run audit:accessibility",
    "knip": "knip"
  },
  "overrides": {
    "@visx/axis": {
      "react": "^19.0.0",
      "react-dom": "^19.0.0"
    },
    "@graphiql/react": {
      "react": "^19.0.0",
      "react-dom": "^19.0.0"
    },
    "@monaco-editor/react": {
      "react": "^19.0.0",
      "react-dom": "^19.0.0"
    },
    "@reach/portal": {
      "react": "^19.0.0",
      "react-dom": "^19.0.0"
    },
    "@reach/utils": {
      "react": "^19.0.0",
      "react-dom": "^19.0.0"
    },
    "@react-spring/zdog": {
      "react": "^19.0.0",
      "react-dom": "^19.0.0"
    },
    "@tinacms/schema-tools": {
      "yup": "^1.6.1"
    },
    "react": "^19.0.0",
    "react-dom": "^19.0.0"
  },
  "dependencies": {
    "@axe-core/react": "^4.10.2",
    "@dnd-kit/modifiers": "^9.0.0",
    "@dnd-kit/sortable": "^10.0.0",
    "@dnd-kit/utilities": "^3.2.2",
    "@floating-ui/react": "^0.27.13",
    "@formkit/auto-animate": "^0.8.2",
    "@gsap/react": "^2.1.2",
    "@headlessui/react": "^2.2.4",
    "@hello-pangea/dnd": "^18.0.1",
    "@heroicons/react": "^2.2.0",
    "@hookform/devtools": "^4.4.0",
    "@hookform/error-message": "^2.0.1",
    "@hookform/resolvers": "^5.1.1",
    "@loadable/component": "^5.16.7",
    "@next/env": "^15.3.5",
    "@next/third-parties": "^15.3.5",
    "@prisma/client": "^6.16.1",
    "@radix-ui/react-accordion": "^1.2.11",
    "@radix-ui/react-aspect-ratio": "^1.1.7",
    "@radix-ui/react-avatar": "^1.1.10",
    "@radix-ui/react-checkbox": "^1.3.2",
    "@radix-ui/react-dialog": "^1.1.14",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-navigation-menu": "^1.2.13",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-select": "^2.2.5",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-tabs": "^1.1.12",
    "@react-aria/button": "^3.13.3",
    "@react-aria/dialog": "^3.5.27",
    "@react-aria/focus": "^3.20.5",
    "@react-aria/interactions": "^3.25.3",
    "@react-aria/live-announcer": "^3.4.3",
    "@react-aria/utils": "^3.29.1",
    "@react-hook/window-size": "^3.1.1",
    "@react-spring/parallax": "^10.0.1",
    "@react-spring/web": "^10.0.1",
    "@sentry/nextjs": "^9.36.0",
    "@sentry/react": "^9.36.0",
    "@sentry/tracing": "^7.120.3",
    "@tailwindcss/aspect-ratio": "^0.4.2",
    "@tailwindcss/container-queries": "^0.1.1",
    "@tailwindcss/forms": "^0.5.10",
    "@tailwindcss/typography": "^0.5.15",
    "@tanstack/react-query": "^5.82.0",
    "@tanstack/react-query-devtools": "^5.82.0",
    "@tinacms/auth": "^1.0.12",
    "@tinacms/cli": "^0.60.5",
    "@tinacms/datalayer": "^1.0.1",
    "@uiw/react-split": "^5.9.3",
    "@use-gesture/react": "^10.3.1",
    "@vercel/analytics": "^1.5.0",
    "@vercel/speed-insights": "^1.2.0",
    "ahooks": "^3.9.0",
    "autoprefixer": "^10.4.21",
    "class-variance-authority": "^0.7.1",
    "classnames": "^2.5.1",
    "claude": "^0.1.2",
    "clsx": "^2.1.1",
    "cn-lib": "^0.0.4",
    "cobe": "^0.6.4",
    "critters": "^0.0.23",
    "crypto-js": "^4.2.0",
    "d3": "^7.9.0",
    "date-fns": "^4.1.0",
    "embla-carousel-autoplay": "^8.6.0",
    "embla-carousel-react": "^8.6.0",
    "final-form": "^5.0.0",
    "flowbite-react": "^0.12.9",
    "focus-trap-react": "^11.0.4",
    "formik": "^2.4.6",
    "framer-motion": "^12.23.21",
    "fuse.js": "^7.1.0",
    "gsap": "^3.13.0",
    "i18next": "^25.3.2",
    "i18next-browser-languagedetector": "^8.2.0",
    "i18next-http-backend": "^3.0.2",
    "immer": "^10.1.1",
    "immutability-helper": "^3.1.1",
    "jose": "^6.0.12",
    "js-cookie": "^3.0.5",
    "lodash-es": "^4.17.21",
    "lucide-react": "^0.525.0",
    "mongodb": "^6.18.0",
    "mongodb-level": "^0.0.4",
    "motion": "^12.23.12",
    "nanoid": "^5.1.5",
    "next": "15.3.4",
    "next-i18next": "^15.4.2",
    "next-intl": "^4.3.4",
    "next-seo": "^6.8.0",
    "next-themes": "^0.4.6",
    "perfume.js": "^9.4.0",
    "postcss-custom-properties": "^14.0.6",
    "postcss-nesting": "^13.0.2",
    "postcss-preset-env": "^10.2.4",
    "postcss-selector-parser": "^7.1.0",
    "qs": "^6.14.0",
    "query-string": "^9.2.2",
    "react": "^19.0.0",
    "react-aria": "^3.41.1",
    "react-barcode-generator": "^1.0.0",
    "react-color": "^2.19.3",
    "react-countup": "^6.5.3",
    "react-credit-cards-2": "^1.0.3",
    "react-datepicker": "^8.4.0",
    "react-day-picker": "^9.8.0",
    "react-dom": "^19.0.0",
    "react-dropzone": "^14.3.8",
    "react-error-boundary": "^6.0.0",
    "react-final-form": "^7.0.0",
    "react-focus-lock": "^2.13.6",
    "react-google-places-autocomplete": "^4.1.0",
    "react-helmet-async": "^2.0.5",
    "react-highlight-words": "^0.21.0",
    "react-hook-form": "^7.59.0",
    "react-hotkeys": "^2.0.0",
    "react-hotkeys-hook": "^5.1.0",
    "react-i18next": "^15.6.0",
    "react-icon-cloud": "^4.1.7",
    "react-infinite-scroll-component": "^6.1.0",
    "react-infinite-scroller": "^1.2.6",
    "react-input-mask": "^2.0.4",
    "react-intersection-observer": "^9.16.0",
    "react-lazyload": "^3.2.1",
    "react-loadable": "^5.5.0",
    "react-number-format": "^5.4.4",
    "react-otp-input": "^3.1.1",
    "react-photo-view": "^1.2.7",
    "react-qr-code": "^2.0.18",
    "react-resizable": "^3.0.5",
    "react-router-cache-route": "^1.13.0",
    "react-select": "^5.10.1",
    "react-signature-canvas": "^1.1.0-alpha.2",
    "react-signature-pad": "^0.0.6",
    "react-speech-recognition": "^4.0.1",
    "react-split-pane": "^0.1.92",
    "react-spring": "^10.0.1",
    "react-use": "^17.6.0",
    "react-use-gesture": "^9.1.3",
    "react-wavify": "^1.11.1",
    "recharts": "^3.1.2",
    "redis": "^5.8.2",
    "rough-notation": "^0.5.1",
    "shortid": "^2.2.17",
    "sonner": "^2.0.6",
    "swiper": "^11.2.10",
    "swr": "^2.3.4",
    "tailwind-clamp": "^4.1.0",
    "tailwind-merge": "^3.3.1",
    "tesseract.js": "^6.0.1",
    "tinacms": "^2.1.1",
    "use-debounce": "^10.0.5",
    "use-immer": "^0.11.0",
    "use-local-storage-state": "^19.5.0",
    "usehooks-ts": "^3.1.1",
    "uuid": "^11.1.0",
    "vaul": "^1.1.2",
    "vercel": "^25.2.0",
    "web-vitals": "^5.0.3",
    "why-did-you-render": "^1.0.1",
    "yup": "^1.6.1",
    "zod": "^3.25.76",
    "zustand": "^5.0.7"
  },
  "devDependencies": {
    "@axe-core/playwright": "^4.10.2",
    "@commitlint/cli": "^19.8.1",
    "@commitlint/config-conventional": "^19.8.1",
    "@eslint/eslintrc": "^3",
    "@next/bundle-analyzer": "^15.5.2",
    "@next/eslint-plugin-next": "^15.3.5",
    "@playwright/test": "^1.55.1",
    "@projectwallace/css-analyzer": "^7.6.0",
    "@svgr/webpack": "^8.1.0",
    "@testing-library/dom": "^10.4.1",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/jest": "^29.5.14",
    "@types/node": "^20.19.21",
    "@types/react": "^19",
    "@types/react-dom": "^19",
    "@typescript-eslint/eslint-plugin": "^8.36.0",
    "@typescript-eslint/parser": "^8.36.0",
    "@welldone-software/why-did-you-render": "^10.0.1",
    "analyze-css": "^2.4.15",
    "constyble": "^1.3.0",
    "css-color-extractor-cli": "^1.1.4",
    "eslint": "^9",
    "eslint-config-next": "15.3.4",
    "eslint-config-prettier": "^10.1.5",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-jest-dom": "^5.5.0",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-testing-library": "^7.5.3",
    "glob": "^11.0.3",
    "husky": "^9.1.7",
    "identity-obj-proxy": "^3.0.0",
    "imagemin": "^9.0.1",
    "imagemin-mozjpeg": "^10.0.0",
    "imagemin-pngquant": "^10.0.0",
    "imagemin-webp": "^8.0.0",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "knip": "^5.65.0",
    "lint-staged": "^16.1.2",
    "p-limit": "^7.1.1",
    "pa11y-ci": "^4.0.1",
    "pesticide": "^1.3.1",
    "postcss": "^8.4.35",
    "prettier-plugin-tailwindcss": "^0.6.13",
    "puppeteer": "^24.24.0",
    "react-devtools": "^1.0.5",
    "sharp": "^0.34.3",
    "style-dictionary": "^4.4.0",
    "tailwindcss": "^3.4.1",
    "tw-animate-css": "^1.3.4",
    "typescript": "^5.6.3",
    "wallace-cli": "^3.2.0",
    "webpack-bundle-analyzer": "^4.10.2"
  },
  "lint-staged": {
    "*.{ts,tsx,js,jsx}": [
      "eslint --fix --max-warnings 0",
      "prettier --write",
      "tsc --noEmit --skipLibCheck"
    ],
    "*.{json,css,md}": [
      "prettier --write"
    ],
    "package.json": [
      "npm audit --audit-level moderate"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  },
  "sideEffects": [
    "*.css",
    "*.scss",
    "*.sass",
    "*.less",
    "**/*.css",
    "**/*.scss",
    "**/*.sass",
    "**/*.less",
    "./src/styles/**/*",
    "./src/app/globals.css"
  ]
}
